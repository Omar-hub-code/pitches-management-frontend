import FullCalendar from '@fullcalendar/react' // must go before plugins
import dayGridPlugin from '@fullcalendar/daygrid' // a plugin!
import interactionPlugin from "@fullcalendar/interaction" // needed for dayClick
import timeGridPlugin from '@fullcalendar/timegrid';

import Head from "next/head";
import HeaderClient from "../../../../components/parts/clients/header";
import FooterClient from "../../../../components/parts/clients/footer";
import {useState} from "react";
import {ExclamationCircleFilled} from "@ant-design/icons";
import {Button, Modal, Space} from 'antd';
import moment from 'moment';
import Link from "next/link";
import JsFiles from "../../../../components/parts/packages/jsFiles";

const {confirm} = Modal;

export default function SpecificPitch(props) {
    const [reservations,setReservations]=useState(props.reservations)
    // const [calEvents,setCalEvents]=useState(null)

    console.log(props)

    const events = reservations.map(reservation =>
        (
            {
                "id": reservation.id,
                "title": "Résérved",
                "date": reservation.dateReservation,
                "display": 'background',
                "backgroundColor" : "#ce079c",
                "color":"black"

            }
        )
    )
    console.log(events)


    const showConfirm = (dateReservation) => {
        confirm({
            title: 'Confirmation',
            icon: <ExclamationCircleFilled/>,
            content: 'Do you Want reserve this pitch at ' + dateReservation,
            onOk() {
                let obj = {
                    owner: 5,
                    pitch: props.pitch.id,
                    dateReservation: dateReservation
                }
                fetch('http://localhost:8080/api/reservations', {
                    method: 'POST', // or 'PUT'
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(obj),
                }).then((response) => response.json())
                    .then((data) => {
                        setReservations(data)
                        showSuccess()
                    console.log('Success:', data);
                })
                    .catch((error) => {
                        console.error('Error:', error);
                    });

            },
            onCancel() {
                console.log('Cancel');
            },
        });
    };
    const showError = () => {
        Modal.error({
            title: 'This is an error message',
            content: "You can't reserve this pitch , its already taken",
        });
    };
    const showSuccess = () => {
        Modal.success({
            content: 'Your reservation has been registred',
        });
    };

    function handleDateClick(e) {
        const resDate=moment(e.date).format('yyyy-M-DD HH:mm:ss')
        console.log(resDate)

        fetch('http://localhost:8080/api/reservations/byDate/'+resDate).then((response) => response.json())
            .then((data) => {
                console.log('Success:', data);
                if(data){
                    showError()
                }
                else {
                    showConfirm(resDate)

                }
                // data =true?  showConfirm(resDate) : showError
            })
            .catch((error) => {
                console.error('Error:', error);
            });

    }

    function eventClick(info) {

        console.log(info.event.id)
    }

    return (
        <>
            <Head>
                <title>Home</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>

            <HeaderClient/>
            <main>
                <div className="container latest-news-section" style={{marginTop: 100}}>
                    <FullCalendar
                        plugins={[dayGridPlugin, interactionPlugin, timeGridPlugin]}
                        events={events}
                        initialView='timeGridWeek'
                        height="80vh"
                        // visibleRange= {
                        //     start: '2020-03-22',
                        //     end: '2020-03-25'
                        // }
                        dateClick={handleDateClick}
                        eventClick={eventClick}
                        slotMinTime="06:00:00"
                        slotMaxTime="24:00:00"
                        slotDuration="01:00:00"

                    />
                </div>
            </main>
            <FooterClient/>

            <JsFiles/>

        </>
    )
}

export async function getServerSideProps(context) {
    // Fetch data from external API
    const {id} = context.query
    const res = await fetch(`http://localhost:8080/api/pitches/` + id)
    const pitch = await res.json()


    const res2 = await fetch(`http://localhost:8080/api/reservations/byPitch/` + id)
    const reservations = await res2.json()

    // Pass data to the page via props
    return {props: {pitch, reservations}}
}
